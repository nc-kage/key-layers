{"version":3,"file":"index.js","sources":["../src/KeyLayers.ts"],"sourcesContent":["import { Guid } from 'guid-typescript';\nimport { isArray, isUndefined, get, noop, last } from 'lodash-es';\n\nimport {\n  ListenerOptions, ListenersTarget, ListenersTargetItem, ListenerType, EventType,\n} from './types';\nimport IEmitter from './IEmitter';\n\nconst ID = Guid.create().toString();\nconst RELEASE_DELAY = 150;\n\nexport const EMITTER_FORCE_LAYER_TYPE = `EMITTER_FORCE_LAYER_TYPE_${ID}`;\nexport const EMITTER_TOP_LAYER_TYPE = `EMITTER_TOP_LAYER_TYPE_${ID}`;\n\nlet isListenersSet = false;\nconst layersMap: { name: string; id: number }[] = [];\nconst listenersLayers: ListenersTarget = [];\nconst listenersPredefinedLayers: {\n  [key: number]: ListenersTarget;\n} = {};\nconst forceListeners: ListenersTarget = [];\n\nconst onEvent = (e: KeyboardEvent, type: string) => {\n  forceListeners.forEach((listener: ListenersTargetItem) => {\n    get(listener, type, noop)(e);\n  });\n  if (listenersLayers.length) {\n    get(last(listenersLayers), type, noop)(e);\n  } else {\n    const layers = Object.keys(listenersPredefinedLayers)\n      .filter((key: string): boolean => listenersPredefinedLayers[Number(key)].length > 0)\n      .sort((a: string, b: string): number => Number(a) - Number(b));\n    (listenersPredefinedLayers[Number(last(layers))] || [])\n      .forEach((listener: ListenersTargetItem) => {\n        get(listener, type, noop)(e);\n      });\n  }\n};\n\nconst clearTargetDownLists = (target: ListenersTarget) => {\n  target.forEach((item: ListenersTargetItem) => {\n    item.instance.clearDownList();\n  });\n};\n\nconst onPress = (e: KeyboardEvent) => {\n  onEvent(e, 'onPress');\n};\nconst onDown = (e: KeyboardEvent) => {\n  onEvent(e, 'onDown');\n};\nconst onUp = (e: KeyboardEvent) => {\n  onEvent(e, 'onUp');\n};\nconst onWindowBlur = () => {\n  clearTargetDownLists(listenersLayers);\n  clearTargetDownLists(forceListeners);\n  Object.keys(listenersPredefinedLayers)\n    .forEach((key: string) => clearTargetDownLists(listenersPredefinedLayers[Number(key)]));\n};\n\nexport class Emitter implements IEmitter {\n  /**\n   * @public\n   *\n   * Sets names for layers indexes.\n   * @param {string|number|array[]|object[]|object} firstParam - Name or id of the layer.\n   * For array or object it's a\n   * layers config.\n   *\n   * @param {string} firstParam.name - Name of the layer.\n   * @param {number} firstParam.id - Id of the layer.\n   * @example\n   * Emitter.setLayersMap({ name: 'fileBrowsing', id: 1 })\n   *\n   * @param {string} firstParam[0] - Name of the layer.\n   * @param {number} firstParam[1] - Id of the layer.\n   * @example\n   * Emitter.setLayersMap(['fileBrowsing', 1])\n   *\n   * @param {number} firstParam[0] - Id of the layer.\n   * @param {string} firstParam[1] - Name of the layer.\n   * @example\n   * Emitter.setLayersMap([1, 'fileBrowsing'])\n   *\n   * @param {string} firstParam[].name - Name of the layer.\n   * @param {number} firstParam[].id - Id of the layer.\n   * @example\n   * Emitter.setLayersMap([\n   *    { name: 'fileBrowsing', id: 1 },\n   *    { name: 'preview', id: 5},\n   * ])\n   *\n   * @param {string} firstParam[][0] - Name of the layer.\n   * @param {number} firstParam[][1] - Id of the layer.\n   * @example\n   * Emitter.setLayersMap([\n   *    ['fileBrowsing', 1],\n   *    ['preview', 5],\n   * ])\n   *\n   * @param {number} firstParam[][0] - Id of the layer.\n   * @param {string} firstParam[][1] - Name of the layer.\n   * @example\n   * Emitter.setLayersMap([\n   *    [1, 'fileBrowsing'],\n   *    [5, 'preview'],\n   * ])\n   *\n   * @param {Object.<string, number>} firstParam - Map of the Layers with name/id pairs.\n   * @example\n   * Emitter.setLayersMap({\n   *    fileBrowsing: 1,\n   *    preview: 5\n   * })\n   *\n   * @param {string|number} secondParam - Name or id of the Layer.\n   * @example\n   * Emitter.setLayersMap('fileBrowsing', 1);\n   * @example\n   * Emitter.setLayersMap(1, 'fileBrowsing');\n   *\n   * @returns {number} Count of the set names;\n   */\n  public static setLayersMap(\n    firstParam: string\n      | number\n      | { name: string, id: number }\n      | (string | number)[]\n      | { name: string, id: number }[]\n      | (string | number)[][]\n      | { [key: string]: number },\n    secondParam?: number | string,\n  ): number {\n    if (typeof firstParam === 'string' && typeof secondParam === 'number') {\n      return Number(Emitter.setLayerMap({ name: firstParam, id: secondParam }));\n    }\n    if (typeof firstParam === 'number' && typeof secondParam === 'string') {\n      return Number(Emitter.setLayerMap({ name: secondParam, id: firstParam }));\n    }\n    if (isArray(firstParam) && firstParam.length === 2\n      && typeof firstParam[0] === 'string' && typeof firstParam[1] === 'number') {\n      return Emitter.setLayersMap(firstParam[0], firstParam[1] as number);\n    }\n    if (isArray(firstParam) && firstParam.length === 2\n      && typeof firstParam[0] === 'number' && typeof firstParam[1] === 'string') {\n      return Emitter.setLayersMap(firstParam[0], firstParam[1] as string);\n    }\n    if (isArray(firstParam) && isUndefined(secondParam)) {\n      let setCount = 0;\n      (firstParam as ({ name: string, id: number } | (string | number)[])[]).forEach((\n        layerMap: { name: string, id: number } | (string | number)[],\n      ) => {\n        setCount += Number(Emitter.setLayerMap(layerMap));\n      });\n      return setCount;\n    }\n    if (!isArray(firstParam) && typeof firstParam === 'object'\n      && !isUndefined(firstParam.name) && !isUndefined(firstParam.id)) {\n      return Number(Emitter.setLayerMap(firstParam as { name: string; id: number }));\n    }\n    if (!isArray(firstParam) && typeof firstParam === 'object') {\n      let setCount = 0;\n      Object.keys(firstParam).forEach((key: string) => {\n        const id = (firstParam as { [key: string]: number })[key];\n        setCount += Number(Emitter.setLayerMap({ id, name: key }));\n      });\n      return setCount;\n    }\n    return 0;\n  }\n\n  private static setLayerMap(data: { name: string; id: number } | (string | number)[]): boolean {\n    if (typeof data === 'object' && !isArray(data)) {\n      return Emitter.setLayerMapFromObject(data);\n    }\n    if (isArray(data)) {\n      return Emitter.setLayerMapFromArray(data);\n    }\n    return false;\n  }\n\n  private static setLayerMapFromObject(data: { name: string; id: number }): boolean {\n    const { name, id } = data || { name: '', id: 0 };\n    if (name) {\n      layersMap.push({ name, id });\n      return true;\n    }\n    return false;\n  }\n\n  private static setLayerMapFromArray(data: (string | number)[]): boolean {\n    let name = data[0];\n    let id = data[1];\n    if (typeof name === 'number' && typeof id === 'string') {\n      name = data[1];\n      id = data[0];\n    }\n    return Emitter.setLayerMapFromObject({ name: name as string, id: id as number });\n  }\n\n  private static setGeneralListeners() {\n    if (!isListenersSet) {\n      window.addEventListener('keypress', onPress, true);\n      window.addEventListener('keyup', onUp, true);\n      window.addEventListener('keydown', onDown, true);\n      window.addEventListener('blur', onWindowBlur, true);\n      isListenersSet = true;\n    }\n  }\n\n  private static getEventKeyCode(e: KeyboardEvent) {\n    return e.which || e.keyCode;\n  }\n\n  private static checkInputTarget(e: KeyboardEvent) {\n    return ['INPUT', 'TEXTAREA'].includes(get(e, 'target.tagName'));\n  }\n\n  private static checkMainOptions(\n    e: KeyboardEvent,\n    options: {\n      altKey?: boolean;\n      ctrlKey?: boolean;\n      shiftKey?: boolean;\n      metaKey?: boolean;\n      skipInput?: boolean;\n    },\n  ) {\n    const { altKey, ctrlKey, shiftKey, metaKey, skipInput } = options;\n    const isInputTarget = Emitter.checkInputTarget(e);\n    return (altKey ? e.altKey : true)\n      && (ctrlKey ? e.ctrlKey : true)\n      && (shiftKey ? e.shiftKey : true)\n      && (metaKey ? e.metaKey : true)\n      && !(isInputTarget && skipInput);\n  }\n\n  private static getListenersTarget(\n    subscribeType: boolean | number | string,\n  ): ListenersTarget | null {\n    if (typeof subscribeType === 'number') {\n      if (!listenersPredefinedLayers[subscribeType]) {\n        listenersPredefinedLayers[subscribeType] = [];\n      }\n      return listenersPredefinedLayers[subscribeType];\n    }\n    if (subscribeType === EMITTER_FORCE_LAYER_TYPE) {\n      return forceListeners;\n    }\n    if (subscribeType === EMITTER_TOP_LAYER_TYPE) {\n      return listenersLayers;\n    }\n    if (typeof subscribeType === 'string') {\n      const layerId = get(layersMap.find(item => item.name === subscribeType), 'id');\n      if (typeof layerId === 'number' && layerId >= 0) {\n        return Emitter.getListenersTarget(layerId);\n      }\n    }\n    return null;\n  }\n\n  private static clearDownLists(subscribeType: boolean | number | string) {\n    if (subscribeType === EMITTER_TOP_LAYER_TYPE) {\n      Emitter.clearLayerDownLists();\n      Emitter.clearPredefinedLayersDownLists();\n    } else if ((subscribeType === 'string' && subscribeType !== EMITTER_FORCE_LAYER_TYPE)\n      || typeof subscribeType === 'number') {\n      const layerId = typeof subscribeType === 'string'\n        ? get(layersMap.find(item => item.name === subscribeType), 'id')\n        : subscribeType;\n      const biggestLayerId = Math.max.apply(null, Object.keys(listenersPredefinedLayers)\n        .map((key: string): number => Number(key)));\n      if (layerId && layerId >= biggestLayerId) {\n        Emitter.clearPredefinedLayersDownLists([layerId]);\n      }\n    }\n  }\n\n  private static clearLayerDownLists() {\n    clearTargetDownLists(listenersLayers);\n  }\n\n  private static clearPredefinedLayersDownLists(skip: number[] = []) {\n    Object.keys(listenersPredefinedLayers).forEach((key: string) => {\n      const normalizedKey = Number(key);\n      if (!skip.includes(normalizedKey)) {\n        clearTargetDownLists(listenersPredefinedLayers[normalizedKey]);\n      }\n    });\n  }\n\n  private subscribeType: boolean | number | string;\n  private readonly releaseDelay: number;\n  private readonly id: string = Guid.create().toString();\n  private downList: {\n    timeStamp: number;\n    keyCode: number;\n    pressKeyCode?: number;\n  }[] = [];\n  private releaseDictionary: { [key: string]: number } = {};\n  private pressReleaseDictionary: {\n    [key: number]: {\n      timeStamp: number;\n      keyCode: number;\n      pressKeyCode?: number;\n    };\n  } = {};\n  private keyDownListeners: ListenerType[] = [];\n  private keyPressListeners: ListenerType[] = [];\n  private keyUpListeners: ListenerType[] = [];\n  private keyReleaseListeners: ListenerType[] = [];\n  private pressReleaseListeners: ListenerType[] = [];\n\n  /**\n   * Constructor of the class.\n   * @param {boolean|number|string} subscribeType - Layer type,\n   * EMITTER_TOP_LAYER_TYPE - creates new layer at the top of the layers\n   * EMITTER_FORCE_LAYER_TYPE - add to layer witch execute permanently\n   * 5 - add to the layer with index 5.\n   * @param {number} releaseDelay - Delay between keyDown and keyUp events for\n   * fires keyRelease event.\n   */\n  constructor(subscribeType: boolean | number | string, releaseDelay: number = RELEASE_DELAY) {\n    this.subscribeType = subscribeType || EMITTER_TOP_LAYER_TYPE;\n    this.releaseDelay = releaseDelay;\n    Emitter.setGeneralListeners();\n    this.addListeners();\n  }\n\n  public clearDownList() {\n    this.downList = [];\n    this.releaseDictionary = {};\n    this.pressReleaseDictionary = {};\n  }\n\n  public addListener(\n    type: EventType, callback: (e: KeyboardEvent) => void, options: ListenerOptions = {},\n  ) {\n    switch (type) {\n      case 'keyDown':\n        this.keyDownListeners.push({ callback, options });\n        break;\n\n      case 'keyPress':\n        this.keyPressListeners.push({ callback, options });\n        break;\n\n      case 'keyUp':\n        this.keyUpListeners.push({ callback, options });\n        break;\n\n      case 'keyRelease':\n        this.keyReleaseListeners.push({ callback, options });\n        break;\n\n      case 'pressRelease':\n        this.pressReleaseListeners.push({ callback, options });\n        break;\n    }\n    return () => this.removeListener(type, callback);\n  }\n\n  public removeListener(type: EventType, callback: (e: KeyboardEvent) => void) {\n    let collection: ListenerType[] = [];\n    switch (type) {\n      case 'keyDown':\n        collection = this.keyDownListeners;\n        break;\n\n      case 'keyPress':\n        collection = this.keyPressListeners;\n        break;\n\n      case 'keyUp':\n        collection = this.keyUpListeners;\n        break;\n\n      case 'keyRelease':\n        collection = this.keyReleaseListeners;\n        break;\n\n      case 'pressRelease':\n        collection = this.pressReleaseListeners;\n        break;\n    }\n    for (let i = 0, ln = collection.length; i < ln; i += 1) {\n      if (collection[i].callback === callback) {\n        collection.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  public destroy() {\n    this.removeListeners();\n  }\n\n  public updateLayerType(subscribeType: boolean | number | string) {\n    this.removeListeners();\n    this.subscribeType = subscribeType;\n    this.addListeners();\n  }\n\n  private addListeners() {\n    const { subscribeType } = this;\n    const listenersTarget = Emitter.getListenersTarget(subscribeType);\n    Emitter.clearDownLists(subscribeType);\n    if (listenersTarget) {\n      listenersTarget.push({\n        id: this.id,\n        instance: this,\n        onPress: this.pressHandler,\n        onDown: this.downHandler,\n        onUp: this.upHandler,\n      });\n    } else {\n      console.warn('KeyLayersJS', 'Unknown subscribe type!');\n    }\n  }\n\n  private removeListeners() {\n    const listenersTarget = Emitter.getListenersTarget(this.subscribeType);\n    if (listenersTarget) {\n      for (let i = 0, ln = listenersTarget.length; i < ln; i += 1) {\n        if (listenersTarget[i].id === this.id) {\n          listenersTarget.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n\n  private pressHandler = (e: KeyboardEvent) => {\n    const { downList } = this;\n    const keyCode = Emitter.getEventKeyCode(e);\n    const timeStamp = e.timeStamp;\n    const downData = downList.find(item => item.timeStamp === timeStamp);\n    if (downData) {\n      downData.pressKeyCode = keyCode;\n      this.keyPressListeners.forEach(listener => this.executeCallback(e, listener, true));\n    }\n  }\n\n  private downHandler = (e: KeyboardEvent) => {\n    const { downList } = this;\n    const keyCode = Emitter.getEventKeyCode(e);\n    if (!downList.find(item => item.keyCode === keyCode)) {\n      downList.push({ keyCode, timeStamp: e.timeStamp });\n    }\n    this.keyDownListeners.forEach(listener => this.executeCallback(e, listener));\n  }\n\n  private upHandler = (e: KeyboardEvent) => {\n    const { downList, releaseDictionary, pressReleaseDictionary, releaseDelay } = this;\n    const keyCode = Emitter.getEventKeyCode(e);\n    let keyDownInfo = null;\n    for (let i = 0, ln = downList.length; i < ln; i += 1) {\n      if (downList[i].keyCode === keyCode) {\n        keyDownInfo = downList[i];\n        downList.splice(i, 1);\n        break;\n      }\n    }\n    this.keyUpListeners.forEach(listener => this.executeCallback(e, listener));\n    if (keyDownInfo && e.timeStamp - keyDownInfo.timeStamp <= releaseDelay) {\n      releaseDictionary[keyDownInfo.keyCode] = keyDownInfo.timeStamp;\n      this.keyReleaseListeners.forEach(listener => this.executeReleaseCallback(e, listener));\n      if (keyDownInfo.pressKeyCode) {\n        pressReleaseDictionary[keyDownInfo.keyCode] = keyDownInfo;\n        this.pressReleaseListeners\n          .forEach(listener => this.executeReleaseCallback(e, listener, true));\n      }\n    }\n  }\n\n  private executeCallback(\n    e: KeyboardEvent,\n    listener: ListenerType,\n    isPressCheck: boolean = false,\n  ) {\n    const { callback, options } = listener;\n    if (Emitter.checkMainOptions(e, options) && this.checkCodeOptions(e, options, isPressCheck)) {\n      callback(e);\n    }\n  }\n\n  private executeReleaseCallback(\n    e: KeyboardEvent, listener: ListenerType, isPressCheck: boolean = false,\n  ) {\n    const { callback, options } = listener;\n    if (Emitter.checkMainOptions(e, options)\n      && this.checkReleaseCodeOptions(e, options, isPressCheck)) {\n      callback(e);\n    }\n  }\n\n  private checkCodeOptions(\n    e: KeyboardEvent, options: ListenerOptions, isPressCheck: boolean = false,\n  ) {\n    const { code } = options;\n    let { codes = [] } = options;\n    const { downList } = this;\n    const keyCode = Emitter.getEventKeyCode(e);\n    codes = code && !codes.length ? [code] : codes;\n    if (codes.length) {\n      if (!codes.includes(keyCode)) {\n        return  false;\n      }\n      for (let i = 0, ln = codes.length; i < ln; i += 1) {\n        const checkCode = codes[i];\n        if (checkCode !== keyCode && !downList.find(item => isPressCheck\n          ? item.pressKeyCode === checkCode : item.keyCode === checkCode)) {\n          return false;\n        }\n      }\n    }\n    return  true;\n  }\n\n  private checkReleaseCodeOptions(\n    e: KeyboardEvent, options: ListenerOptions, isPressCheck: boolean = false,\n  ) {\n    const { code } = options;\n    let { codes = [] } = options;\n    const { releaseDictionary, pressReleaseDictionary, releaseDelay } = this;\n    let keyCode = Emitter.getEventKeyCode(e);\n    if (isPressCheck) {\n      const keyPressInfo = pressReleaseDictionary[keyCode];\n      if (e.timeStamp - keyPressInfo.timeStamp <= releaseDelay) {\n        keyCode = keyPressInfo.pressKeyCode || 0;\n      }\n    }\n    const timeStamp = e.timeStamp;\n    codes = code && !codes.length ? [code] : codes;\n    if (codes.length) {\n      if (!codes.includes(keyCode)) {\n        return  false;\n      }\n      for (let i = 0, ln = codes.length; i < ln; i += 1) {\n        const checkCode = codes[i];\n        let releaseCheckTimestamp = 0;\n        if (isPressCheck) {\n          const pressKey = Object.keys(pressReleaseDictionary).find((key: string): boolean => {\n            return pressReleaseDictionary[Number(key)].pressKeyCode === checkCode;\n          });\n          releaseCheckTimestamp = pressKey ? pressReleaseDictionary[Number(pressKey)].timeStamp : 0;\n        } else {\n          releaseCheckTimestamp = releaseDictionary[checkCode];\n        }\n        if (checkCode !== keyCode && !(releaseCheckTimestamp\n          && timeStamp - releaseCheckTimestamp <= releaseDelay)) {\n          return false;\n        }\n      }\n    }\n    return  true;\n  }\n}\n"],"names":["Guid","get","noop","last","isArray","isUndefined"],"mappings":";;;;;;;AAQA,IAAM,EAAE,GAAGA,mBAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC;AACpC,IAAM,aAAa,GAAG,GAAG,CAAC;AAEb,IAAA,wBAAwB,GAAG,2BAA4B,CAAA,MAAA,CAAA,EAAE,EAAG;AAC5D,IAAA,sBAAsB,GAAG,yBAA0B,CAAA,MAAA,CAAA,EAAE,EAAG;AAErE,IAAI,cAAc,GAAG,KAAK,CAAC;AAC3B,IAAM,SAAS,GAAmC,EAAE,CAAC;AACrD,IAAM,eAAe,GAAoB,EAAE,CAAC;AAC5C,IAAM,yBAAyB,GAE3B,EAAE,CAAC;AACP,IAAM,cAAc,GAAoB,EAAE,CAAC;AAE3C,IAAM,OAAO,GAAG,UAAC,CAAgB,EAAE,IAAY,EAAA;AAC7C,IAAA,cAAc,CAAC,OAAO,CAAC,UAAC,QAA6B,EAAA;QACnDC,YAAG,CAAC,QAAQ,EAAE,IAAI,EAAEC,aAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,KAAC,CAAC,CAAC;IACH,IAAI,eAAe,CAAC,MAAM,EAAE;AAC1B,QAAAD,YAAG,CAACE,aAAI,CAAC,eAAe,CAAC,EAAE,IAAI,EAAED,aAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,KAAA;AAAM,SAAA;AACL,QAAA,IAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,yBAAyB,CAAC;AAClD,aAAA,MAAM,CAAC,UAAC,GAAW,IAAc,OAAA,yBAAyB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAA,EAAA,CAAC;AACnF,aAAA,IAAI,CAAC,UAAC,CAAS,EAAE,CAAS,EAAA,EAAa,OAAA,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAArB,EAAqB,CAAC,CAAC;AACjE,QAAA,CAAC,yBAAyB,CAAC,MAAM,CAACC,aAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE;aACnD,OAAO,CAAC,UAAC,QAA6B,EAAA;YACrCF,YAAG,CAAC,QAAQ,EAAE,IAAI,EAAEC,aAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,SAAC,CAAC,CAAC;AACN,KAAA;AACH,CAAC,CAAC;AAEF,IAAM,oBAAoB,GAAG,UAAC,MAAuB,EAAA;AACnD,IAAA,MAAM,CAAC,OAAO,CAAC,UAAC,IAAyB,EAAA;AACvC,QAAA,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;AAChC,KAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,IAAM,OAAO,GAAG,UAAC,CAAgB,EAAA;AAC/B,IAAA,OAAO,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;AACxB,CAAC,CAAC;AACF,IAAM,MAAM,GAAG,UAAC,CAAgB,EAAA;AAC9B,IAAA,OAAO,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;AACvB,CAAC,CAAC;AACF,IAAM,IAAI,GAAG,UAAC,CAAgB,EAAA;AAC5B,IAAA,OAAO,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AACrB,CAAC,CAAC;AACF,IAAM,YAAY,GAAG,YAAA;IACnB,oBAAoB,CAAC,eAAe,CAAC,CAAC;IACtC,oBAAoB,CAAC,cAAc,CAAC,CAAC;AACrC,IAAA,MAAM,CAAC,IAAI,CAAC,yBAAyB,CAAC;AACnC,SAAA,OAAO,CAAC,UAAC,GAAW,IAAK,OAAA,oBAAoB,CAAC,yBAAyB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAA5D,EAA4D,CAAC,CAAC;AAC5F,CAAC,CAAC;AAEF,IAAA,OAAA,kBAAA,YAAA;AA6PE;;;;;;;;AAQG;IACH,SAAY,OAAA,CAAA,aAAwC,EAAE,YAAoC,EAAA;AAApC,QAAA,IAAA,YAAA,KAAA,KAAA,CAAA,EAAA,EAAA,YAAoC,GAAA,aAAA,CAAA,EAAA;QAA1F,IAKC,KAAA,GAAA,IAAA,CAAA;QAlCgB,IAAE,CAAA,EAAA,GAAWF,mBAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC;QAC/C,IAAQ,CAAA,QAAA,GAIV,EAAE,CAAC;QACD,IAAiB,CAAA,iBAAA,GAA8B,EAAE,CAAC;QAClD,IAAsB,CAAA,sBAAA,GAM1B,EAAE,CAAC;QACC,IAAgB,CAAA,gBAAA,GAAmB,EAAE,CAAC;QACtC,IAAiB,CAAA,iBAAA,GAAmB,EAAE,CAAC;QACvC,IAAc,CAAA,cAAA,GAAmB,EAAE,CAAC;QACpC,IAAmB,CAAA,mBAAA,GAAmB,EAAE,CAAC;QACzC,IAAqB,CAAA,qBAAA,GAAmB,EAAE,CAAC;QAyH3C,IAAY,CAAA,YAAA,GAAG,UAAC,CAAgB,EAAA;AAC9B,YAAA,IAAA,QAAQ,GAAK,KAAI,CAAA,QAAT,CAAU;YAC1B,IAAM,OAAO,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;AAC3C,YAAA,IAAM,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;AAC9B,YAAA,IAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAA,IAAI,EAAA,EAAI,OAAA,IAAI,CAAC,SAAS,KAAK,SAAS,CAA5B,EAA4B,CAAC,CAAC;AACrE,YAAA,IAAI,QAAQ,EAAE;AACZ,gBAAA,QAAQ,CAAC,YAAY,GAAG,OAAO,CAAC;gBAChC,KAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAA,QAAQ,EAAI,EAAA,OAAA,KAAI,CAAC,eAAe,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAA,EAAA,CAAC,CAAC;AACrF,aAAA;AACH,SAAC,CAAA;QAEO,IAAW,CAAA,WAAA,GAAG,UAAC,CAAgB,EAAA;AAC7B,YAAA,IAAA,QAAQ,GAAK,KAAI,CAAA,QAAT,CAAU;YAC1B,IAAM,OAAO,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;AAC3C,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAA,IAAI,EAAA,EAAI,OAAA,IAAI,CAAC,OAAO,KAAK,OAAO,CAAxB,EAAwB,CAAC,EAAE;AACpD,gBAAA,QAAQ,CAAC,IAAI,CAAC,EAAE,OAAO,EAAA,OAAA,EAAE,SAAS,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC;AACpD,aAAA;YACD,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,eAAe,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAjC,EAAiC,CAAC,CAAC;AAC/E,SAAC,CAAA;QAEO,IAAS,CAAA,SAAA,GAAG,UAAC,CAAgB,EAAA;AAC7B,YAAA,IAAA,EAAwE,GAAA,KAAI,EAA1E,QAAQ,cAAA,EAAE,iBAAiB,GAAA,EAAA,CAAA,iBAAA,EAAE,sBAAsB,GAAA,EAAA,CAAA,sBAAA,EAAE,YAAY,kBAAS,CAAC;YACnF,IAAM,OAAO,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAI,WAAW,GAAG,IAAI,CAAC;AACvB,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;gBACpD,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,OAAO,EAAE;AACnC,oBAAA,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC1B,oBAAA,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACtB,MAAM;AACP,iBAAA;AACF,aAAA;YACD,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,eAAe,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAjC,EAAiC,CAAC,CAAC;YAC3E,IAAI,WAAW,IAAI,CAAC,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,IAAI,YAAY,EAAE;gBACtE,iBAAiB,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,WAAW,CAAC,SAAS,CAAC;gBAC/D,KAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,sBAAsB,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAxC,EAAwC,CAAC,CAAC;gBACvF,IAAI,WAAW,CAAC,YAAY,EAAE;AAC5B,oBAAA,sBAAsB,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,WAAW,CAAC;AAC1D,oBAAA,KAAI,CAAC,qBAAqB;AACvB,yBAAA,OAAO,CAAC,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,sBAAsB,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,CAA9C,EAA8C,CAAC,CAAC;AACxE,iBAAA;AACF,aAAA;AACH,SAAC,CAAA;AAtJC,QAAA,IAAI,CAAC,aAAa,GAAG,aAAa,IAAI,sBAAsB,CAAC;AAC7D,QAAA,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,OAAO,CAAC,mBAAmB,EAAE,CAAC;QAC9B,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;AA1QD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DG;AACW,IAAA,OAAA,CAAA,YAAY,GAA1B,UACE,UAM6B,EAC7B,WAA6B,EAAA;QAE7B,IAAI,OAAO,UAAU,KAAK,QAAQ,IAAI,OAAO,WAAW,KAAK,QAAQ,EAAE;AACrE,YAAA,OAAO,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;AAC3E,SAAA;QACD,IAAI,OAAO,UAAU,KAAK,QAAQ,IAAI,OAAO,WAAW,KAAK,QAAQ,EAAE;AACrE,YAAA,OAAO,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC;AAC3E,SAAA;QACD,IAAII,gBAAO,CAAC,UAAU,CAAC,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC;AAC7C,eAAA,OAAO,UAAU,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAI,OAAO,UAAU,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;AAC3E,YAAA,OAAO,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAW,CAAC,CAAC;AACrE,SAAA;QACD,IAAIA,gBAAO,CAAC,UAAU,CAAC,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC;AAC7C,eAAA,OAAO,UAAU,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAI,OAAO,UAAU,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;AAC3E,YAAA,OAAO,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAW,CAAC,CAAC;AACrE,SAAA;QACD,IAAIA,gBAAO,CAAC,UAAU,CAAC,IAAIC,oBAAW,CAAC,WAAW,CAAC,EAAE;YACnD,IAAI,UAAQ,GAAG,CAAC,CAAC;AAChB,YAAA,UAAqE,CAAC,OAAO,CAAC,UAC7E,QAA4D,EAAA;gBAE5D,UAAQ,IAAI,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;AACpD,aAAC,CAAC,CAAC;AACH,YAAA,OAAO,UAAQ,CAAC;AACjB,SAAA;QACD,IAAI,CAACD,gBAAO,CAAC,UAAU,CAAC,IAAI,OAAO,UAAU,KAAK,QAAQ;AACrD,eAAA,CAACC,oBAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAACA,oBAAW,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;YACjE,OAAO,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,UAA0C,CAAC,CAAC,CAAC;AAChF,SAAA;QACD,IAAI,CAACD,gBAAO,CAAC,UAAU,CAAC,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;YAC1D,IAAI,UAAQ,GAAG,CAAC,CAAC;YACjB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,UAAC,GAAW,EAAA;AAC1C,gBAAA,IAAM,EAAE,GAAI,UAAwC,CAAC,GAAG,CAAC,CAAC;AAC1D,gBAAA,UAAQ,IAAI,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,EAAE,EAAA,EAAA,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC7D,aAAC,CAAC,CAAC;AACH,YAAA,OAAO,UAAQ,CAAC;AACjB,SAAA;AACD,QAAA,OAAO,CAAC,CAAC;KACV,CAAA;IAEc,OAAW,CAAA,WAAA,GAA1B,UAA2B,IAAwD,EAAA;QACjF,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,CAACA,gBAAO,CAAC,IAAI,CAAC,EAAE;AAC9C,YAAA,OAAO,OAAO,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;AAC5C,SAAA;AACD,QAAA,IAAIA,gBAAO,CAAC,IAAI,CAAC,EAAE;AACjB,YAAA,OAAO,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;AAC3C,SAAA;AACD,QAAA,OAAO,KAAK,CAAC;KACd,CAAA;IAEc,OAAqB,CAAA,qBAAA,GAApC,UAAqC,IAAkC,EAAA;AAC/D,QAAA,IAAA,KAAe,IAAI,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAxC,IAAI,UAAA,EAAE,EAAE,QAAgC,CAAC;AACjD,QAAA,IAAI,IAAI,EAAE;YACR,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,EAAA,IAAA,EAAE,EAAE,EAAA,EAAA,EAAE,CAAC,CAAC;AAC7B,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;AACD,QAAA,OAAO,KAAK,CAAC;KACd,CAAA;IAEc,OAAoB,CAAA,oBAAA,GAAnC,UAAoC,IAAyB,EAAA;AAC3D,QAAA,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACnB,QAAA,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACjB,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,OAAO,EAAE,KAAK,QAAQ,EAAE;AACtD,YAAA,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACf,YAAA,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACd,SAAA;AACD,QAAA,OAAO,OAAO,CAAC,qBAAqB,CAAC,EAAE,IAAI,EAAE,IAAc,EAAE,EAAE,EAAE,EAAY,EAAE,CAAC,CAAC;KAClF,CAAA;AAEc,IAAA,OAAA,CAAA,mBAAmB,GAAlC,YAAA;QACE,IAAI,CAAC,cAAc,EAAE;YACnB,MAAM,CAAC,gBAAgB,CAAC,UAAU,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;YACnD,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAC7C,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;YACjD,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;YACpD,cAAc,GAAG,IAAI,CAAC;AACvB,SAAA;KACF,CAAA;IAEc,OAAe,CAAA,eAAA,GAA9B,UAA+B,CAAgB,EAAA;AAC7C,QAAA,OAAO,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,OAAO,CAAC;KAC7B,CAAA;IAEc,OAAgB,CAAA,gBAAA,GAA/B,UAAgC,CAAgB,EAAA;AAC9C,QAAA,OAAO,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,QAAQ,CAACH,YAAG,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC;KACjE,CAAA;AAEc,IAAA,OAAA,CAAA,gBAAgB,GAA/B,UACE,CAAgB,EAChB,OAMC,EAAA;QAEO,IAAA,MAAM,GAA4C,OAAO,CAAnD,MAAA,EAAE,OAAO,GAAmC,OAAO,CAA1C,OAAA,EAAE,QAAQ,GAAyB,OAAO,CAAhC,QAAA,EAAE,OAAO,GAAgB,OAAO,CAAA,OAAvB,EAAE,SAAS,GAAK,OAAO,CAAA,SAAZ,CAAa;QAClE,IAAM,aAAa,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;AAClD,QAAA,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,GAAG,IAAI;gBAC1B,OAAO,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC;gBAC3B,QAAQ,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;gBAC7B,OAAO,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC;AAC5B,eAAA,EAAE,aAAa,IAAI,SAAS,CAAC,CAAC;KACpC,CAAA;IAEc,OAAkB,CAAA,kBAAA,GAAjC,UACE,aAAwC,EAAA;AAExC,QAAA,IAAI,OAAO,aAAa,KAAK,QAAQ,EAAE;AACrC,YAAA,IAAI,CAAC,yBAAyB,CAAC,aAAa,CAAC,EAAE;AAC7C,gBAAA,yBAAyB,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;AAC/C,aAAA;AACD,YAAA,OAAO,yBAAyB,CAAC,aAAa,CAAC,CAAC;AACjD,SAAA;QACD,IAAI,aAAa,KAAK,wBAAwB,EAAE;AAC9C,YAAA,OAAO,cAAc,CAAC;AACvB,SAAA;QACD,IAAI,aAAa,KAAK,sBAAsB,EAAE;AAC5C,YAAA,OAAO,eAAe,CAAC;AACxB,SAAA;AACD,QAAA,IAAI,OAAO,aAAa,KAAK,QAAQ,EAAE;YACrC,IAAM,OAAO,GAAGA,YAAG,CAAC,SAAS,CAAC,IAAI,CAAC,UAAA,IAAI,EAAA,EAAI,OAAA,IAAI,CAAC,IAAI,KAAK,aAAa,CAAA,EAAA,CAAC,EAAE,IAAI,CAAC,CAAC;YAC/E,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,IAAI,CAAC,EAAE;AAC/C,gBAAA,OAAO,OAAO,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;AAC5C,aAAA;AACF,SAAA;AACD,QAAA,OAAO,IAAI,CAAC;KACb,CAAA;IAEc,OAAc,CAAA,cAAA,GAA7B,UAA8B,aAAwC,EAAA;QACpE,IAAI,aAAa,KAAK,sBAAsB,EAAE;YAC5C,OAAO,CAAC,mBAAmB,EAAE,CAAC;YAC9B,OAAO,CAAC,8BAA8B,EAAE,CAAC;AAC1C,SAAA;aAAM,IAAI,CAAC,aAAa,KAAK,QAAQ,IAAI,aAAa,KAAK,wBAAwB;eAC/E,OAAO,aAAa,KAAK,QAAQ,EAAE;AACtC,YAAA,IAAM,OAAO,GAAG,OAAO,aAAa,KAAK,QAAQ;kBAC7CA,YAAG,CAAC,SAAS,CAAC,IAAI,CAAC,UAAA,IAAI,EAAA,EAAI,OAAA,IAAI,CAAC,IAAI,KAAK,aAAa,GAAA,CAAC,EAAE,IAAI,CAAC;kBAC9D,aAAa,CAAC;AAClB,YAAA,IAAM,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,yBAAyB,CAAC;AAC/E,iBAAA,GAAG,CAAC,UAAC,GAAW,EAAA,EAAa,OAAA,MAAM,CAAC,GAAG,CAAC,CAAA,EAAA,CAAC,CAAC,CAAC;AAC9C,YAAA,IAAI,OAAO,IAAI,OAAO,IAAI,cAAc,EAAE;AACxC,gBAAA,OAAO,CAAC,8BAA8B,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;AACnD,aAAA;AACF,SAAA;KACF,CAAA;AAEc,IAAA,OAAA,CAAA,mBAAmB,GAAlC,YAAA;QACE,oBAAoB,CAAC,eAAe,CAAC,CAAC;KACvC,CAAA;IAEc,OAA8B,CAAA,8BAAA,GAA7C,UAA8C,IAAmB,EAAA;AAAnB,QAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,EAAA,IAAmB,GAAA,EAAA,CAAA,EAAA;QAC/D,MAAM,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC,OAAO,CAAC,UAAC,GAAW,EAAA;AACzD,YAAA,IAAM,aAAa,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AAClC,YAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;AACjC,gBAAA,oBAAoB,CAAC,yBAAyB,CAAC,aAAa,CAAC,CAAC,CAAC;AAChE,aAAA;AACH,SAAC,CAAC,CAAC;KACJ,CAAA;AAwCM,IAAA,OAAA,CAAA,SAAA,CAAA,aAAa,GAApB,YAAA;AACE,QAAA,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACnB,QAAA,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;AAC5B,QAAA,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;KAClC,CAAA;AAEM,IAAA,OAAA,CAAA,SAAA,CAAA,WAAW,GAAlB,UACE,IAAe,EAAE,QAAoC,EAAE,OAA6B,EAAA;QADtF,IAyBC,KAAA,GAAA,IAAA,CAAA;AAxBwD,QAAA,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA,EAAA,OAA6B,GAAA,EAAA,CAAA,EAAA;AAEpF,QAAA,QAAQ,IAAI;AACV,YAAA,KAAK,SAAS;AACZ,gBAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAA,QAAA,EAAE,OAAO,EAAA,OAAA,EAAE,CAAC,CAAC;gBAClD,MAAM;AAER,YAAA,KAAK,UAAU;AACb,gBAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAA,QAAA,EAAE,OAAO,EAAA,OAAA,EAAE,CAAC,CAAC;gBACnD,MAAM;AAER,YAAA,KAAK,OAAO;AACV,gBAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAA,QAAA,EAAE,OAAO,EAAA,OAAA,EAAE,CAAC,CAAC;gBAChD,MAAM;AAER,YAAA,KAAK,YAAY;AACf,gBAAA,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAA,QAAA,EAAE,OAAO,EAAA,OAAA,EAAE,CAAC,CAAC;gBACrD,MAAM;AAER,YAAA,KAAK,cAAc;AACjB,gBAAA,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAA,QAAA,EAAE,OAAO,EAAA,OAAA,EAAE,CAAC,CAAC;gBACvD,MAAM;AACT,SAAA;AACD,QAAA,OAAO,YAAM,EAAA,OAAA,KAAI,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAnC,EAAmC,CAAC;KAClD,CAAA;AAEM,IAAA,OAAA,CAAA,SAAA,CAAA,cAAc,GAArB,UAAsB,IAAe,EAAE,QAAoC,EAAA;QACzE,IAAI,UAAU,GAAmB,EAAE,CAAC;AACpC,QAAA,QAAQ,IAAI;AACV,YAAA,KAAK,SAAS;AACZ,gBAAA,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC;gBACnC,MAAM;AAER,YAAA,KAAK,UAAU;AACb,gBAAA,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC;gBACpC,MAAM;AAER,YAAA,KAAK,OAAO;AACV,gBAAA,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC;gBACjC,MAAM;AAER,YAAA,KAAK,YAAY;AACf,gBAAA,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC;gBACtC,MAAM;AAER,YAAA,KAAK,cAAc;AACjB,gBAAA,UAAU,GAAG,IAAI,CAAC,qBAAqB,CAAC;gBACxC,MAAM;AACT,SAAA;AACD,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;YACtD,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,QAAQ,EAAE;AACvC,gBAAA,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACxB,MAAM;AACP,aAAA;AACF,SAAA;KACF,CAAA;AAEM,IAAA,OAAA,CAAA,SAAA,CAAA,OAAO,GAAd,YAAA;QACE,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB,CAAA;IAEM,OAAe,CAAA,SAAA,CAAA,eAAA,GAAtB,UAAuB,aAAwC,EAAA;QAC7D,IAAI,CAAC,eAAe,EAAE,CAAC;AACvB,QAAA,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB,CAAA;AAEO,IAAA,OAAA,CAAA,SAAA,CAAA,YAAY,GAApB,YAAA;AACU,QAAA,IAAA,aAAa,GAAK,IAAI,CAAA,aAAT,CAAU;QAC/B,IAAM,eAAe,GAAG,OAAO,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;AAClE,QAAA,OAAO,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;AACtC,QAAA,IAAI,eAAe,EAAE;YACnB,eAAe,CAAC,IAAI,CAAC;gBACnB,EAAE,EAAE,IAAI,CAAC,EAAE;AACX,gBAAA,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,IAAI,CAAC,YAAY;gBAC1B,MAAM,EAAE,IAAI,CAAC,WAAW;gBACxB,IAAI,EAAE,IAAI,CAAC,SAAS;AACrB,aAAA,CAAC,CAAC;AACJ,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,yBAAyB,CAAC,CAAC;AACxD,SAAA;KACF,CAAA;AAEO,IAAA,OAAA,CAAA,SAAA,CAAA,eAAe,GAAvB,YAAA;QACE,IAAM,eAAe,GAAG,OAAO,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AACvE,QAAA,IAAI,eAAe,EAAE;AACnB,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;gBAC3D,IAAI,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,EAAE;AACrC,oBAAA,eAAe,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC7B,MAAM;AACP,iBAAA;AACF,aAAA;AACF,SAAA;KACF,CAAA;AA6CO,IAAA,OAAA,CAAA,SAAA,CAAA,eAAe,GAAvB,UACE,CAAgB,EAChB,QAAsB,EACtB,YAA6B,EAAA;AAA7B,QAAA,IAAA,YAAA,KAAA,KAAA,CAAA,EAAA,EAAA,YAA6B,GAAA,KAAA,CAAA,EAAA;QAErB,IAAA,QAAQ,GAAc,QAAQ,CAAA,QAAtB,EAAE,OAAO,GAAK,QAAQ,CAAA,OAAb,CAAc;AACvC,QAAA,IAAI,OAAO,CAAC,gBAAgB,CAAC,CAAC,EAAE,OAAO,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,OAAO,EAAE,YAAY,CAAC,EAAE;YAC3F,QAAQ,CAAC,CAAC,CAAC,CAAC;AACb,SAAA;KACF,CAAA;AAEO,IAAA,OAAA,CAAA,SAAA,CAAA,sBAAsB,GAA9B,UACE,CAAgB,EAAE,QAAsB,EAAE,YAA6B,EAAA;AAA7B,QAAA,IAAA,YAAA,KAAA,KAAA,CAAA,EAAA,EAAA,YAA6B,GAAA,KAAA,CAAA,EAAA;QAE/D,IAAA,QAAQ,GAAc,QAAQ,CAAA,QAAtB,EAAE,OAAO,GAAK,QAAQ,CAAA,OAAb,CAAc;AACvC,QAAA,IAAI,OAAO,CAAC,gBAAgB,CAAC,CAAC,EAAE,OAAO,CAAC;eACnC,IAAI,CAAC,uBAAuB,CAAC,CAAC,EAAE,OAAO,EAAE,YAAY,CAAC,EAAE;YAC3D,QAAQ,CAAC,CAAC,CAAC,CAAC;AACb,SAAA;KACF,CAAA;AAEO,IAAA,OAAA,CAAA,SAAA,CAAA,gBAAgB,GAAxB,UACE,CAAgB,EAAE,OAAwB,EAAE,YAA6B,EAAA;AAA7B,QAAA,IAAA,YAAA,KAAA,KAAA,CAAA,EAAA,EAAA,YAA6B,GAAA,KAAA,CAAA,EAAA;AAEjE,QAAA,IAAA,IAAI,GAAK,OAAO,CAAA,IAAZ,CAAa;QACnB,IAAA,EAAA,GAAe,OAAO,CAAZ,KAAA,EAAV,KAAK,GAAG,EAAA,KAAA,KAAA,CAAA,GAAA,EAAE,KAAA,CAAa;AACrB,QAAA,IAAA,QAAQ,GAAK,IAAI,CAAA,QAAT,CAAU;QAC1B,IAAM,OAAO,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;AAC3C,QAAA,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;QAC/C,IAAI,KAAK,CAAC,MAAM,EAAE;AAChB,YAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;AAC5B,gBAAA,OAAQ,KAAK,CAAC;AACf,aAAA;AACQ,YAAA,IAAA,OAAA,GAAA,UAAA,CAAC,EAAM,EAAE,EAAA;AAChB,gBAAA,IAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAC3B,gBAAA,IAAI,SAAS,KAAK,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAA,IAAI,EAAA,EAAI,OAAA,YAAY;AAC9D,sBAAE,IAAI,CAAC,YAAY,KAAK,SAAS,GAAG,IAAI,CAAC,OAAO,KAAK,SAAS,CADZ,EACY,CAAC,EAAE;oCAC1D,KAAK,EAAA,CAAA;AACb,iBAAA;;AALH,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,EAAA;AAAxC,gBAAA,IAAA,OAAA,GAAA,OAAA,CAAA,CAAC,EAAM,EAAE,CAAA,CAAA;;;AAMjB,aAAA;AACF,SAAA;AACD,QAAA,OAAQ,IAAI,CAAC;KACd,CAAA;AAEO,IAAA,OAAA,CAAA,SAAA,CAAA,uBAAuB,GAA/B,UACE,CAAgB,EAAE,OAAwB,EAAE,YAA6B,EAAA;AAA7B,QAAA,IAAA,YAAA,KAAA,KAAA,CAAA,EAAA,EAAA,YAA6B,GAAA,KAAA,CAAA,EAAA;AAEjE,QAAA,IAAA,IAAI,GAAK,OAAO,CAAA,IAAZ,CAAa;QACnB,IAAA,EAAA,GAAe,OAAO,CAAZ,KAAA,EAAV,KAAK,GAAG,EAAA,KAAA,KAAA,CAAA,GAAA,EAAE,KAAA,CAAa;QACvB,IAAA,EAAA,GAA8D,IAAI,EAAhE,iBAAiB,GAAA,EAAA,CAAA,iBAAA,EAAE,sBAAsB,GAAA,EAAA,CAAA,sBAAA,EAAE,YAAY,GAAA,EAAA,CAAA,YAAS,CAAC;QACzE,IAAI,OAAO,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;AACzC,QAAA,IAAI,YAAY,EAAE;AAChB,YAAA,IAAM,YAAY,GAAG,sBAAsB,CAAC,OAAO,CAAC,CAAC;YACrD,IAAI,CAAC,CAAC,SAAS,GAAG,YAAY,CAAC,SAAS,IAAI,YAAY,EAAE;AACxD,gBAAA,OAAO,GAAG,YAAY,CAAC,YAAY,IAAI,CAAC,CAAC;AAC1C,aAAA;AACF,SAAA;AACD,QAAA,IAAM,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;AAC9B,QAAA,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;QAC/C,IAAI,KAAK,CAAC,MAAM,EAAE;AAChB,YAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;AAC5B,gBAAA,OAAQ,KAAK,CAAC;AACf,aAAA;AACQ,YAAA,IAAA,OAAA,GAAA,UAAA,CAAC,EAAM,EAAE,EAAA;AAChB,gBAAA,IAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC3B,IAAI,qBAAqB,GAAG,CAAC,CAAC;AAC9B,gBAAA,IAAI,YAAY,EAAE;AAChB,oBAAA,IAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,IAAI,CAAC,UAAC,GAAW,EAAA;wBACpE,OAAO,sBAAsB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,YAAY,KAAK,SAAS,CAAC;AACxE,qBAAC,CAAC,CAAC;AACH,oBAAA,qBAAqB,GAAG,QAAQ,GAAG,sBAAsB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC;AAC3F,iBAAA;AAAM,qBAAA;AACL,oBAAA,qBAAqB,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;AACtD,iBAAA;AACD,gBAAA,IAAI,SAAS,KAAK,OAAO,IAAI,EAAE,qBAAqB;AAC/C,uBAAA,SAAS,GAAG,qBAAqB,IAAI,YAAY,CAAC,EAAE;oCAChD,KAAK,EAAA,CAAA;AACb,iBAAA;;AAdH,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,EAAA;AAAxC,gBAAA,IAAA,OAAA,GAAA,OAAA,CAAA,CAAC,EAAM,EAAE,CAAA,CAAA;;;AAejB,aAAA;AACF,SAAA;AACD,QAAA,OAAQ,IAAI,CAAC;KACd,CAAA;IACH,OAAC,OAAA,CAAA;AAAD,CAAC,EAAA;;;;;;"}