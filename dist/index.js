import{Guid as e}from"guid-typescript";import{isArray as t,isUndefined as s,get as r,noop as i,last as n}from"lodash-es";const a=e.create().toString(),o=`EMITTER_FORCE_LAYER_TYPE_${a}`,c=`EMITTER_TOP_LAYER_TYPE_${a}`;let l=!1;const y=[],p=[],h={},d=[],u=(e,t)=>{if(d.forEach((s=>{r(s,t,i)(e)})),p.length)r(n(p),t,i)(e);else{const s=Object.keys(h).filter((e=>h[Number(e)].length>0)).sort(((e,t)=>Number(e)-Number(t)));(h[Number(n(s))]||[]).forEach((s=>{r(s,t,i)(e)}))}},k=e=>{e.forEach((e=>{e.instance.clearDownList()}))},L=e=>{u(e,"onPress")},f=e=>{u(e,"onDown")},m=e=>{u(e,"onUp")},b=()=>{k(p),k(d),Object.keys(h).forEach((e=>k(h[Number(e)])))};class g{constructor(t,s=150){this.id=e.create().toString(),this.downList=[],this.releaseDictionary={},this.pressReleaseDictionary={},this.keyDownListeners=[],this.keyPressListeners=[],this.keyUpListeners=[],this.keyReleaseListeners=[],this.pressReleaseListeners=[],this.pressHandler=e=>{const{downList:t}=this,s=g.getEventKeyCode(e),r=e.timeStamp,i=t.find((e=>e.timeStamp===r));i&&(i.pressKeyCode=s,this.keyPressListeners.forEach((t=>this.executeCallback(e,t,!0))))},this.downHandler=e=>{const{downList:t}=this,s=g.getEventKeyCode(e);t.find((e=>e.keyCode===s))||t.push({keyCode:s,timeStamp:e.timeStamp}),this.keyDownListeners.forEach((t=>this.executeCallback(e,t)))},this.upHandler=e=>{const{downList:t,releaseDictionary:s,pressReleaseDictionary:r,releaseDelay:i}=this,n=g.getEventKeyCode(e);let a=null;for(let e=0,s=t.length;e<s;e+=1)if(t[e].keyCode===n){a=t[e],t.splice(e,1);break}this.keyUpListeners.forEach((t=>this.executeCallback(e,t))),a&&e.timeStamp-a.timeStamp<=i&&(s[a.keyCode]=a.timeStamp,this.keyReleaseListeners.forEach((t=>this.executeReleaseCallback(e,t))),a.pressKeyCode&&(r[a.keyCode]=a,this.pressReleaseListeners.forEach((t=>this.executeReleaseCallback(e,t,!0)))))},this.subscribeType=t||c,this.releaseDelay=s,g.setGeneralListeners(),this.addListeners()}static setLayersMap(e,r){if("string"==typeof e&&"number"==typeof r)return Number(g.setLayerMap({name:e,id:r}));if("number"==typeof e&&"string"==typeof r)return Number(g.setLayerMap({name:r,id:e}));if(t(e)&&2===e.length&&"string"==typeof e[0]&&"number"==typeof e[1])return g.setLayersMap(e[0],e[1]);if(t(e)&&2===e.length&&"number"==typeof e[0]&&"string"==typeof e[1])return g.setLayersMap(e[0],e[1]);if(t(e)&&s(r)){let t=0;return e.forEach((e=>{t+=Number(g.setLayerMap(e))})),t}if(!t(e)&&"object"==typeof e&&!s(e.name)&&!s(e.id))return Number(g.setLayerMap(e));if(!t(e)&&"object"==typeof e){let t=0;return Object.keys(e).forEach((s=>{const r=e[s];t+=Number(g.setLayerMap({id:r,name:s}))})),t}return 0}static setLayerMap(e){return"object"!=typeof e||t(e)?!!t(e)&&g.setLayerMapFromArray(e):g.setLayerMapFromObject(e)}static setLayerMapFromObject(e){const{name:t,id:s}=e||{name:"",id:0};return!!t&&(y.push({name:t,id:s}),!0)}static setLayerMapFromArray(e){let t=e[0],s=e[1];return"number"==typeof t&&"string"==typeof s&&(t=e[1],s=e[0]),g.setLayerMapFromObject({name:t,id:s})}static setGeneralListeners(){l||(window.addEventListener("keypress",L,!0),window.addEventListener("keyup",m,!0),window.addEventListener("keydown",f,!0),window.addEventListener("blur",b,!0),l=!0)}static getEventKeyCode(e){return e.which||e.keyCode}static checkInputTarget(e){return["INPUT","TEXTAREA"].includes(r(e,"target.tagName"))}static checkMainOptions(e,t){const{altKey:s,ctrlKey:r,shiftKey:i,metaKey:n,skipInput:a}=t,o=g.checkInputTarget(e);return(!s||e.altKey)&&(!r||e.ctrlKey)&&(!i||e.shiftKey)&&(!n||e.metaKey)&&!(o&&a)}static getListenersTarget(e){if("number"==typeof e)return h[e]||(h[e]=[]),h[e];if(e===o)return d;if(e===c)return p;if("string"==typeof e){const t=r(y.find((t=>t.name===e)),"id");if("number"==typeof t&&t>=0)return g.getListenersTarget(t)}return null}static clearDownLists(e){if(e===c)g.clearLayerDownLists(),g.clearPredefinedLayersDownLists();else if("string"===e&&e!==o||"number"==typeof e){const t="string"==typeof e?r(y.find((t=>t.name===e)),"id"):e,s=Math.max.apply(null,Object.keys(h).map((e=>Number(e))));t&&t>=s&&g.clearPredefinedLayersDownLists([t])}}static clearLayerDownLists(){k(p)}static clearPredefinedLayersDownLists(e=[]){Object.keys(h).forEach((t=>{const s=Number(t);e.includes(s)||k(h[s])}))}clearDownList(){this.downList=[],this.releaseDictionary={},this.pressReleaseDictionary={}}addListener(e,t,s={}){switch(e){case"keyDown":this.keyDownListeners.push({callback:t,options:s});break;case"keyPress":this.keyPressListeners.push({callback:t,options:s});break;case"keyUp":this.keyUpListeners.push({callback:t,options:s});break;case"keyRelease":this.keyReleaseListeners.push({callback:t,options:s});break;case"pressRelease":this.pressReleaseListeners.push({callback:t,options:s})}return()=>this.removeListener(e,t)}removeListener(e,t){let s=[];switch(e){case"keyDown":s=this.keyDownListeners;break;case"keyPress":s=this.keyPressListeners;break;case"keyUp":s=this.keyUpListeners;break;case"keyRelease":s=this.keyReleaseListeners;break;case"pressRelease":s=this.pressReleaseListeners}for(let e=0,r=s.length;e<r;e+=1)if(s[e].callback===t){s.splice(e,1);break}}destroy(){this.removeListeners()}updateLayerType(e){this.removeListeners(),this.subscribeType=e,this.addListeners()}addListeners(){const{subscribeType:e}=this,t=g.getListenersTarget(e);g.clearDownLists(e),t?t.push({id:this.id,instance:this,onPress:this.pressHandler,onDown:this.downHandler,onUp:this.upHandler}):console.warn("KeyLayersJS","Unknown subscribe type!")}removeListeners(){const e=g.getListenersTarget(this.subscribeType);if(e)for(let t=0,s=e.length;t<s;t+=1)if(e[t].id===this.id){e.splice(t,1);break}}executeCallback(e,t,s=!1){const{callback:r,options:i}=t;g.checkMainOptions(e,i)&&this.checkCodeOptions(e,i,s)&&r(e)}executeReleaseCallback(e,t,s=!1){const{callback:r,options:i}=t;g.checkMainOptions(e,i)&&this.checkReleaseCodeOptions(e,i,s)&&r(e)}checkCodeOptions(e,t,s=!1){const{code:r}=t;let{codes:i=[]}=t;const{downList:n}=this,a=g.getEventKeyCode(e);if(i=r&&!i.length?[r]:i,i.length){if(!i.includes(a))return!1;for(let e=0,t=i.length;e<t;e+=1){const t=i[e];if(t!==a&&!n.find((e=>s?e.pressKeyCode===t:e.keyCode===t)))return!1}}return!0}checkReleaseCodeOptions(e,t,s=!1){const{code:r}=t;let{codes:i=[]}=t;const{releaseDictionary:n,pressReleaseDictionary:a,releaseDelay:o}=this;let c=g.getEventKeyCode(e);if(s){const t=a[c];e.timeStamp-t.timeStamp<=o&&(c=t.pressKeyCode||0)}const l=e.timeStamp;if(i=r&&!i.length?[r]:i,i.length){if(!i.includes(c))return!1;for(let e=0,t=i.length;e<t;e+=1){const t=i[e];let r=0;if(s){const e=Object.keys(a).find((e=>a[Number(e)].pressKeyCode===t));r=e?a[Number(e)].timeStamp:0}else r=n[t];if(t!==c&&!(r&&l-r<=o))return!1}}return!0}}export{o as EMITTER_FORCE_LAYER_TYPE,c as EMITTER_TOP_LAYER_TYPE,g as Emitter};
